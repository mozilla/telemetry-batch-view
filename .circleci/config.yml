####################
# CircleCI configuration reference:
#   https://circleci.com/docs/2.0/configuration-reference
####################
# CircleCI built-in environment variables:
#   https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
####################


####################
# Templates: see "anchors" in https://learnxinyminutes.com/docs/yaml/
####################

# See available image tags at https://hub.docker.com/r/mozilla/sbt/
sbt_image: &sbt_image mozilla/sbt:8u171_1.1.6

# The ~/.sbt directory holds any sbt or Scala versions requested by previous builds.
# The ~/.ivy2 directory holds Java and Scala dependencies declared in the build.
# Caching these two can significantly reduce sbt startup time.
save_cache_settings: &save_cache_settings
  key: telemetry-batch-view-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
  paths:
    - ~/.ivy2
    - ~/.sbt

prep_cache_settings: &prep_cache_settings
  name: Clean directories to restore
  command: |
    rm -r ~/.ivy2 ~/.sbt

restore_cache_settings: &restore_cache_settings
  keys:
    - telemetry-batch-view-{{ .Branch }}-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    - telemetry-batch-view-{{ .Branch }}
    - telemetry-batch-view-

# At time of writing, we use the default container size (2 CPUs and 4GB memory),
# but may renogotiate with CircleCI and enable larger resource_class
# options at which point we might want to bump up the Java memory settings
# and reduce the test parallelism.
test_settings: &test_settings
  docker:
    - image: *sbt_image
  working_directory: /telemetry-batch-view
  # resource_class: xlarge

early_return_for_forks: &early_return_for_forks
  name: Early return if this build is from a forked PR
  command: |
    if [ -n "$CIRCLE_PR_NUMBER" ]; then
      echo "Nothing to upload for forked PRs, so marking this step successful"
      circleci step halt
    fi


####################
# Jobs: see https://circleci.com/docs/2.0/jobs-steps/
####################

version: 2
jobs:

  test:
    <<: *test_settings
    steps:
      - checkout
      - run: |
          echo "hi, jeff!"
          env | grep CIRCLE_



####################
# Workflows: see https://circleci.com/docs/2.0/workflows/
####################

workflows:
  version: 2
  build:
    jobs:
      - test
